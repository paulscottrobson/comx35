// *******************************************************************************************************************************
// *******************************************************************************************************************************
//
//		Name:		hardware.cpp
//		Purpose:	Hardware Interface
//		Created:	1st November 2016
//		Author:		Paul Robson (paul@robsons.org.uk)
//
// *******************************************************************************************************************************
// *******************************************************************************************************************************

#include <stdlib.h>
#include "sys_processor.h"
#include "hardware.h"
#include "gfx.h"																// Want the keyboard access.

int isInitialised = 0;
int pendingKey;

// *******************************************************************************************************************************
//													Hardware Reset
// *******************************************************************************************************************************

void HWIReset(void) {
	if (isInitialised == 0) {
		isInitialised = 1;
		pendingKey = 0;				       										// Clear keyboard buffer
	}
}

// *******************************************************************************************************************************
//											Process keys passed from debugger
// *******************************************************************************************************************************

BYTE8 HWIProcessKey(BYTE8 key,BYTE8 isRunMode) {
	if (isRunMode) {															// In run mode, push 0-9 A-F
    	if (key != 0 && isRunMode != 0) {										// Running and key press
        	BYTE8 newKey = GFXToASCII(key,1);									// Convert to ASCII
            if (newKey != 0) pendingKey = newKey;								// Put pending key in buffer
        }
	}
	return key;
}

// *******************************************************************************************************************************
//												Called at End of Frame
// *******************************************************************************************************************************

void HWIEndFrame(void) {
}

// *******************************************************************************************************************************
//											Read keyboard
// *******************************************************************************************************************************

BYTE8 HWIReadKeyboard(void) {
	BYTE8 rv = 0;
	if (pendingKey != 0) {													// Key waiting.
		rv = pendingKey;                                                    // Return it.
		pendingKey = 0;														// Clear buffer
	}
	return rv;
}
